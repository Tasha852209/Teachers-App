{"version":3,"file":"static/js/910.e40be091.chunk.js","mappings":"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","sources":["components/TeacherCard/Review.jsx","components/TeacherCard/Level.jsx","components/TeacherCard/TeacherCard.styled.jsx","components/TeacherCard/TeacherCard.jsx","components/TeachersList/TeachersList.styled.jsx","components/FavoritesList/FavoritesList.jsx","pages/FavoritesPage/FavoritesPage.jsx"],"sourcesContent":["import Icon from 'components/Icon/Icon';\nimport React from 'react';\n\nconst Review = ({ review }) => {\n  return (\n    <div>\n      <p className=\"grey-text-color\">{review.reviewer_name}</p>\n      <p>\n        <Icon className=\"star\" id=\"star\" />\n        {review.reviewer_rating}\n      </p>\n      <p>{review.comment}</p>\n    </div>\n  );\n};\n\nexport default Review;\n","import React from 'react';\n\nconst Level = ({ level }) => {\n  return (\n    <div>\n      <span>{level}</span>\n    </div>\n  );\n};\n\nexport default Level;\n","const { default: styled } = require('@emotion/styled');\n\nexport const StyledCard = styled.div`\n  display: flex;\n  gap: 48px;\n\n  img {\n    width: 96px;\n    border-radius: 50%;\n    border: 1 solid #fbe9ba;\n    box-shadow: 0 0 0px 9px #ffff, 0 0 0px 12px #fbe9ba;\n  }\n  line-height: 1.5;\n  color: var(--text-color-black);\n  font-weight: 500;\n\n  .languages {\n    text-decoration: underline;\n    margin-bottom: 8px;\n  }\n\n  .grey-text-color {\n    color: #8a8a89;\n  }\n  .all-content {\n    display: flex;\n    flex-direction: column;\n    gap: 32px;\n  }\n  .card-main-content {\n    position: relative;\n    padding-top: 4px;\n  }\n\n  .statistics-favorites {\n    position: absolute;\n    top: 0;\n    left: 192px;\n    display: flex;\n    align-items: center;\n  }\n  .statistics {\n    display: flex;\n    align-items: center;\n    font-weight: 500;\n  }\n\n  .info {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    margin-bottom: 16px;\n  }\n  .reviews {\n    display: flex;\n    flex-direction: column;\n    gap: 32px;\n  }\n\n  .lessons-online,\n  .rating {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  }\n\n  .fill-heart {\n    fill: var(--primary-orange);\n    color: var(--primary-orange);\n    stroke: var(--primary-orange);\n    height: 26px;\n    width: 26px;\n  }\n  .heart-button {\n    padding-left: 0;\n    margin-left: 64px;\n    background: transparent;\n    border: none;\n    /* height: 26px;\n    width: 26px; */\n  }\n  .transparent-heart {\n    height: 26px;\n    width: 26px;\n  }\n  .ellipse-container {\n    padding: 13px;\n    position: relative;\n  }\n  .ellipse {\n    position: absolute;\n    z-index: 100;\n    top: 18px;\n    left: 85px;\n    height: 12px;\n    width: 12px;\n  }\n  .book-open {\n    height: 16px;\n    width: 16px;\n  }\n  .star {\n    height: 16px;\n    width: 16px;\n  }\n  .price {\n    color: #38cd3e;\n  }\n  .item {\n    font-size: 16px;\n\n    border-right: 1px solid rgba(18, 20, 23, 0.2);\n    :not(:last-child) {\n      margin-right: 16px;\n    }\n    padding-right: 16px;\n  }\n`;\n\nexport const CardBookButton = styled.button`\n  height: 60px;\n  width: 232px;\n  line-height: 1.375;\n  font-size: 18px;\n  font-weight: bold;\n  color: var(--text-color-black);\n  border: none;\n  border-radius: 12px;\n  background-color: var(--primary-orange);\n  &:hover,\n  &:active {\n    background-color: var(--secondary-orange);\n  }\n`;\n","// import React from 'react';\nimport Review from './Review';\nimport Level from './Level';\nimport { updateFavorites } from '../../fire_base/users';\nimport { useAuth } from 'providers';\nimport Icon from 'components/Icon/Icon';\nimport { CardBookButton, StyledCard } from './TeacherCard.styled';\n\nconst TeacherCard = ({ teacher, favorite, removeFromFavorites }) => {\n  const { user } = useAuth();\n  const favorites = Array.isArray(user?.favorites) ? user.favorites : [];\n\n  const onToggleFavorites = () => {\n    const isFavorite = favorites.some(t => t.id === teacher.id);\n    let updatedFavorites;\n\n    if (isFavorite) {\n      // Видаляємо вчителя зі списку улюблених\n      updatedFavorites = favorites.filter(t => t.id !== teacher.id);\n    } else {\n      // Додаємо вчителя до списку улюблених\n      updatedFavorites = [...favorites, teacher];\n    }\n\n    // Оновлюємо список улюблених у базі даних\n    updateFavorites(user.id, updatedFavorites);\n  };\n\n  const isFavorite = favorites.some(t => t.id === teacher.id);\n\n  const onSignIn = () => {\n    return alert('Please register or sign in');\n  };\n\n  return (\n    <StyledCard>\n      <div className=\"ellipse-container\">\n        <Icon className=\"ellipse\" id=\"ellipse\" />\n        <img src={teacher.avatar_url} alt={teacher.name} />\n      </div>\n      <div className=\"all-content\">\n        <div className=\"card-main-content\">\n          <div className=\"statistics-favorites\">\n            <div className=\"statistics\">\n              <span className=\"lessons-online item\">\n                <Icon className=\"book-open\" id=\"book-open\" />\n\n                <span>Lessons online</span>\n              </span>\n              <span className=\"item\">Lessons done: {teacher.lessons_done}</span>\n\n              <span className=\"rating item\">\n                <Icon className=\"star\" id=\"star\" />\n\n                <span>Rating: {teacher.rating}</span>\n              </span>\n              <span className=\"item\">\n                Price/1hour:\n                <span className=\"price\"> {teacher.price_per_hour}$</span>\n              </span>\n            </div>\n\n            {user && !favorite && (\n              <button className=\"heart-button\" onClick={onToggleFavorites}>\n                {isFavorite ? (\n                  <Icon id=\"fill-heart\" className=\"fill-heart\" />\n                ) : (\n                  <Icon id=\"heart\" className=\"transparent-heart\" />\n                )}\n              </button>\n            )}\n            {!user && !favorite && (\n              <button className=\"heart-button\" onClick={onSignIn}>\n                {isFavorite ? (\n                  <Icon id=\"fill-heart\" className=\"fill-heart\" />\n                ) : (\n                  <Icon id=\"heart\" className=\"transparent-heart\" />\n                )}\n              </button>\n            )}\n            {user && favorite && (\n              <button\n                className=\"heart-button\"\n                onClick={() => removeFromFavorites(teacher.id)}\n              >\n                <Icon id=\"fill-heart\" className=\"fill-heart\" />\n              </button>\n            )}\n          </div>\n\n          <p className=\"grey-text-color\">Languages</p>\n          <h2>\n            {teacher.name} {teacher.surname}\n          </h2>\n          <div className=\"info\">\n            <p>\n              <span className=\"grey-text-color \">Speaks: </span>\n              <span className=\"languages\">{teacher.languages.join(', ')}</span>\n            </p>\n            <p>\n              <span className=\"grey-text-color\">Lesson Info: </span>\n              {teacher.lesson_info}\n            </p>\n            <p>\n              <span className=\"grey-text-color\">Conditions: </span>\n              {teacher.conditions.join(' ')}\n            </p>\n          </div>\n          <p className=\"experience\">{teacher.experience}</p>\n        </div>\n        <div className=\"other-content\">\n          <div className=\"reviews\">\n            {teacher.reviews.map((review, index) => (\n              <Review key={index} review={review} />\n            ))}\n          </div>\n          <div className=\"levels\">\n            {teacher.levels.map((level, index) => (\n              <Level key={index} level={level} />\n            ))}\n          </div>\n          <CardBookButton>Book trial lesson</CardBookButton>\n        </div>\n      </div>\n    </StyledCard>\n  );\n};\n\nexport default TeacherCard;\n","import styled from '@emotion/styled';\n\nexport const StyledCardsContainer = styled.div`\n  padding: 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n`;\n\nexport const LoadMoreButton = styled.button`\n  height: 60px;\n  width: 183px;\n  line-height: 1.375;\n  font-size: 18px;\n  font-weight: bold;\n  color: var(--text-color-black);\n  border: none;\n  border-radius: 12px;\n  background-color: var(--primary-orange);\n  &:hover,\n  &:active {\n    background-color: var(--secondary-orange);\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { database } from '../../fire_base/config';\nimport {\n  ref,\n  get,\n  limitToFirst,\n  query,\n  startAfter,\n  orderByKey,\n  remove,\n} from 'firebase/database';\nimport TeacherCard from 'components/TeacherCard/TeacherCard';\nimport { useAuth } from 'providers';\n\nimport { LoadMoreButton } from 'components/TeachersList/TeachersList.styled';\n\nconst PER_PAGE = 4;\n\nconst FavoritesList = ({ favorite }) => {\n  const [favoriteTeachers, setFavoriteTeachers] = useState([]);\n  const [lastId, setLastId] = useState(null);\n  const { user } = useAuth();\n\n  useEffect(() => {\n    const fetchFavoriteTeachers = async () => {\n      try {\n        const q = query(\n          ref(database, `users/${user.id}/favorites`),\n          orderByKey(),\n          limitToFirst(PER_PAGE)\n        );\n        const snapshot = await get(q);\n        const data = snapshot.val();\n\n        if (snapshot.exists()) {\n          const normalizeData = Object.entries(data).map(([key, value]) => ({\n            id: key,\n            ...value,\n          }));\n          setFavoriteTeachers(normalizeData);\n          setLastId(normalizeData[normalizeData.length - 1]?.id);\n        }\n      } catch (error) {\n        console.log('Error fetching favorite teachers:', error);\n      }\n    };\n    fetchFavoriteTeachers();\n  }, [user.id]); // Викликається лише під час першого рендеру\n\n  const onLoadMore = async () => {\n    const q = query(\n      ref(database, `users/${user.id}/favorites`),\n      orderByKey(),\n      startAfter(lastId),\n      limitToFirst(PER_PAGE)\n    );\n\n    const snapshot = await get(q);\n    const data = snapshot.val();\n\n    if (snapshot.exists()) {\n      const normalizeData = Object.entries(data).map(([key, value]) => ({\n        id: key,\n        ...value,\n      }));\n      setFavoriteTeachers(prev => [...prev, ...normalizeData]);\n      setLastId(normalizeData[normalizeData.length - 1]?.id);\n    }\n  };\n\n  const removeFromFavorites = async teacherId => {\n    try {\n      await remove(ref(database, `users/${user.id}/favorites/${teacherId}`));\n      setFavoriteTeachers(prev =>\n        prev.filter(teacher => teacher.id !== teacherId)\n      );\n    } catch (error) {\n      console.log('Error removing teacher from favorites:', error);\n    }\n  };\n\n  const renderFavoriteTeachers = () => {\n    return favoriteTeachers.map(teacher => (\n      <div key={teacher.id}>\n        <TeacherCard\n          removeFromFavorites={removeFromFavorites}\n          favorite={favorite}\n          teacher={teacher}\n        />\n        {/* <HeartButton\n          className=\"heart-button\"\n          onClick={() => removeFromFavorites(teacher.id)}\n        >\n          <Icon id=\"fill-heart\" className=\"fill-heart\" />\n        </HeartButton> */}\n      </div>\n    ));\n  };\n\n  return (\n    <div>\n      {user.favorites && renderFavoriteTeachers()}\n      {user.favorites && user.favorites.length > favoriteTeachers.length && (\n        <LoadMoreButton onClick={onLoadMore}>LOAD MORE</LoadMoreButton>\n      )}\n      {!user.favorites && <p>There no favorite teachers</p>}\n    </div>\n  );\n};\n\nexport default FavoritesList;\n","import FavoritesList from 'components/FavoritesList/FavoritesList';\nimport React from 'react';\n\nconst FavoritesPage = () => {\n  return (\n    <section>\n      <FavoritesList favorite={true} />\n    </section>\n  );\n};\n\nexport default FavoritesPage;\n"],"names":["_ref","review","_jsxs","children","_jsx","className","reviewer_name","Icon","id","reviewer_rating","comment","level","styled","require","default","StyledCard","div","_templateObject","_taggedTemplateLiteral","CardBookButton","button","_templateObject2","teacher","favorite","removeFromFavorites","user","useAuth","favorites","Array","isArray","isFavorite","some","t","src","avatar_url","alt","name","lessons_done","rating","price_per_hour","onClick","updatedFavorites","filter","concat","_toConsumableArray","updateFavorites","alert","surname","languages","join","lesson_info","conditions","experience","reviews","map","index","Review","levels","Level","StyledCardsContainer","LoadMoreButton","_useState","useState","_useState2","_slicedToArray","favoriteTeachers","setFavoriteTeachers","_useState3","_useState4","lastId","setLastId","useEffect","fetchFavoriteTeachers","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","q","snapshot","data","_normalizeData","normalizeData","_context","prev","next","query","ref","database","orderByKey","limitToFirst","get","sent","val","exists","Object","entries","_ref3","_ref4","key","value","_objectSpread","length","t0","console","log","stop","apply","arguments","onLoadMore","_ref5","_callee2","_normalizeData2","_context2","startAfter","_ref6","_ref7","_ref8","_callee3","teacherId","_context3","remove","_x","TeacherCard","FavoritesList"],"sourceRoot":""}